[mysqld]
sql_mode=TRADITIONAL                    # 中川的「これで行くべし」
#innodb_file_format=Barracuda           # ワーニングが出る the parameter may be removed in future releases. Default が変わったので指定しない。
#innodb_file_format_max=Barracuda       # ワーニングが出る the parameter may be removed in future releases. Default が変わったので指定しない。
character-set-server = utf8mb4
collation-server = utf8mb4_bin
skip-character-set-client-handshake
symbolic-links=0
innodb_file_per_table=1                 # テーブル単位でファイル分割
innodb_locks_unsafe_for_binlog=OFF      # 明示的に gap lock を取りたい時にトランザクション単位で REPEATABLE READ に変更しても排他制御が効かない為 OFF
innodb_flush_log_at_trx_commit=2        # 証券会社の取引データではない為これで良しとする。書き込み性能重視。
innodb_log_file_size=500M               # 500M x 5ファイル 2.5GBとする
innodb_log_files_in_group=5             # 500M x 5ファイル 2.5GBとする
transaction-isolation=READ-COMMITTED    # アグリ村からこうしてくれ。と。
explicit_defaults_for_timestamp=true    # 明記しないとワーニングが発生するため
query_cache_type=OFF                    # クエリキャッシュはブログサイトの表示などでは有効だが、MFではデメリットの方が大きい
query_cache_size=0                      # クエリキャッシュはブログサイトの表示などでは有効だが、MFではデメリットの方が大きい
max_connect_errors=999999999            # アプリ接続情報をミスった時にアカウントロックがかかって障害がならないようにする
innodb_flush_method=O_DIRECT            # OSのキャッシュ機構をバイパスし、RDBMS側のキャッシュのみで設計と運用をする
max_allowed_packet=500MB                # 大きな書き込み（請求書サービスのバイナリイメージなど）ができるようにするため
innodb_print_all_deadlocks=ON           # デッドロック発生後の調査を楽にするため
innodb_purge_threads=4                  # 複数の個別のパージスレッドで処理をすることで、複数のテーブル上で DML 操作時の効率性を改善
net_read_timeout=1200                   # Default 30秒 ある程度大きくしないと、MySQL Dump 取得 | 直流し込みが安定して取得できない
net_write_timeout=1200                  # Default 60秒 ある程度大きくしないと、MySQL Dump 取得 | 直流し込みが安定して取得できない
innodb_online_alter_log_max_size=1073741824000  # 数百GBのテーブルを alter する際に上限にあたりエラーしないようにする

## □ MySQL 5.7 関連
default_password_lifetime = 0           # これを入れておかないとPasswordExpireして大障害になる
log-timestamps=system                   # ログ出力のタイムスタンプをJSTにする
innodb_buffer_pool_dump_at_shutdown=OFF # シャットダウン時にバッファプールをメモリに書く機能はOFFにする。時間がかかる。
innodb_buffer_pool_load_at_startup=OFF  # スタートアップ時も明示的にOFFにする。時間がかかる。

### ■ サーバー固有設定
## □ パフォーマンス関連
innodb_buffer_pool_size=1024MB          # バッファプール
#large-pages #Huge Pages                # 大きなメモリを搭載したサーバーは HugePage ON で運用する
#innodb_page_size = 4K                  # Default 16K に対しSSDならランダムアクセスに強いので4Kにすべき。ファイルシステムのブロックサイズも合わせる
innodb_page_size = 16K                  # ERROR 1071 (42000) at line 25: Specified key was too long; max key length is 768 bytes エラーしたのでDefaultに
max_connections=1000                    # 最大接続数。ローカル開発に必要な数を設定。1プロダクトで数十消費してたりしたので、それを考慮した数値にしてみてる
tmp_table_size=300M                     # tmp表領域をたくさん使う状況になった時、300MB超過時にメモリからディスク処理にする。300Mでエラーするわけではない
max_heap_table_size=300M                # tmp表領域をたくさん使う状況になった時、300MB超過時にメモリからディスク処理にする。300Mでエラーするわけではない
innodb_sync_array_size=32               # mutex/rw_lockのイベント待ち処理の並列性に影響。CPUコア数に応じて設定
innodb_log_buffer_size=64M              # InnoDBの更新ログを記録するメモリ上の領域 64Mは十分に大きい (Redoに書くときのバッファ)
innodb_read_io_threads=20               # I/Oスレッド数 CPU コア数の状況に応じて設定
innodb_write_io_threads=20              # I/Oスレッド数 CPU コア数の状況に応じて設定
innodb_buffer_pool_instances=48         # バッファープール処理を分割すると、競合が減るため並列性が向上する場合がある。48あれば十分だろう
table_open_cache_instances=16           # table_open_cacheの分割数を設定。分割することでDDL文以外の並列性が向上。
table_open_cache=12000                  # 同時に各スレッドがそれぞれ各テーブルを開く。テーブルキャッシュ数は結構大きめに設定する必要あり
innodb_sync_spin_loops=200              # スレッドが中断される前に、InnoDB 相互排他ロックが開放されるまでスレッドが待機する回数。Default30
innodb_thread_concurrency=20            # 実行中のスレッドの数がこの値になると追加待ち合わせを行う。コアに応じて設定する
innodb_io_capacity=40000                # For High I/O Disk IOPSを引き上げておかないとここがボトルネックになる 4万IOPSをこえることは無い
innodb_io_capacity_max=60000            # For High I/O Disk IOPSを引き上げておかないとここがボトルネックになる 4万IOPSをこえることは無い
innodb_flush_neighbors=0                # For High I/O Disk 近隣ページの書き出しを無効化する。ランダムアクセスが得意なSSDでは無駄
innodb_lru_scan_depth=40000             # For High I/O Disk これも同様に大きくする必要あり

# dockerが関係しているか不明だけど、 signal 11 で落ちる対処
# http://tech.gmo-media.jp/post/57409532281/mysql-three-days-war-4
thread_cache_size=0

## □ スロークエリ関連
#slow_query_log                         # スロークエリON
#log-output=FILE,TABLE                  # ログファイルとテーブルに2重記録
#long_query_time = 1                    # 適宜秒数を設定
#slow_query_log-file = /mbook/log/mysql/slow-query.log

## □ 一時的利用固有設定
# skip_innodb_doublewrite               #データインポート時の速度を上げるため。本番運用では利用してはいけない。
# slave-skip-errors=1062                # For Error_code: 1062 レプリ時のPRIMARYのエラー回避 重複ID交じりのデータをかぶせながらレプリ構築するときに利用する。


[mysqldump]
default-character-set = utf8mb4
max_allowed_packet = 200M

[client]
default-character-set = utf8mb4
